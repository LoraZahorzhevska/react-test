{"version":3,"sources":["components/Form/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Form","state","name","tag","experience","licence","nameInputId","shortid","generate","tagInputId","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","handleLicenceChange","console","log","checked","this","htmlFor","id","type","onChange","disabled","Component","App","formSubmitNandler","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAqIeA,E,4MAhIbC,MAAQ,CACNC,KAAM,GACNC,IAAK,GACLC,WAAY,SACZC,SAAS,G,EAGXC,YAAcC,IAAQC,W,EACtBC,WAAaF,IAAQC,W,EAErBE,aAAe,SAACC,GAKd,MAAwBA,EAAMC,cAAtBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MAEd,EAAKC,SAAL,eACGZ,EAAOW,K,EAIZE,aAAe,SAACJ,GACdA,EAAMK,iBAGN,EAAKC,MAAMC,SAAS,EAAKjB,OAEzB,EAAKkB,S,EAePC,oBAAsB,SAACT,GACrBU,QAAQC,IAAIX,EAAMC,cAAcW,SAEhC,EAAKT,SAAS,CAAET,QAASM,EAAMC,cAAcW,W,EAG/CJ,MAAQ,WACN,EAAKL,SAAS,CAAEZ,KAAM,GAAIC,IAAK,M,4CAGjC,WACE,OACE,uBAAMe,SAAUM,KAAKT,aAArB,UACE,wBAAOU,QAASD,KAAKlB,YAArB,iBACO,IACL,uBACEoB,GAAIF,KAAKlB,YACTqB,KAAK,OACLzB,KAAK,OACLW,MAAOW,KAAKvB,MAAMC,KAClB0B,SAAUJ,KAAKd,kBAGnB,wBAAOe,QAASD,KAAKf,WAArB,gBACM,IACJ,uBACEiB,GAAIF,KAAKf,WACTkB,KAAK,OACLzB,KAAK,MACLW,MAAOW,KAAKvB,MAAME,IAClByB,SAAUJ,KAAKd,kBAInB,4CACA,kCACE,uBACEiB,KAAK,QACLzB,KAAK,aACLW,MAAM,SACNe,SAAUJ,KAAKd,aACfa,QAAmC,WAA1BC,KAAKvB,MAAMG,aANxB,YAUA,kCACE,uBACEuB,KAAK,QACLzB,KAAK,aACLW,MAAM,SACNe,SAAUJ,KAAKd,aACfa,QAAmC,WAA1BC,KAAKvB,MAAMG,aANxB,YAUA,kCACE,uBACEuB,KAAK,QACLzB,KAAK,aACLW,MAAM,SACNe,SAAUJ,KAAKd,aACfa,QAAmC,WAA1BC,KAAKvB,MAAMG,aANxB,YAWA,kCAEE,uBACEuB,KAAK,WACLzB,KAAK,UACLqB,QAASC,KAAKvB,MAAMI,QACpBuB,SAAUJ,KAAKJ,sBACd,IAPL,8BAWA,wBAAQO,KAAK,SAASE,UAAWL,KAAKvB,MAAMI,QAA5C,yB,GA1HWyB,aC+EJC,E,4MAtDb9B,MAAQ,G,EAER+B,kBAAoB,SAACC,GACnBZ,QAAQC,IAAIW,I,4CAed,WASE,OACE,mCACE,cAAC,EAAD,CAAMf,SAAUM,KAAKQ,0B,GAxCXF,aCLHI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fe1f27ef.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\n\r\nclass Form extends Component {\r\n  // этот state не для сабмита, а для рендера формы\r\n  state = {\r\n    name: \"\",\r\n    tag: \"\",\r\n    experience: \"junior\",\r\n    licence: false,\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n  tagInputId = shortid.generate();\r\n\r\n  handleChange = (event) => {\r\n    // console.log(event.currentTarget);\r\n    // console.log(event.currentTarget.name);\r\n    // console.log(event.currentTarget.value);\r\n\r\n    const { name, value } = event.currentTarget;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault(); //чтобы по умолчанию не перезагрузилась страница\r\n    // console.log(this.state);\r\n\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  // handleNameChange = (event) => {\r\n  //   // console.log(event.currentTarget.value);\r\n\r\n  //   this.setState({ name: event.currentTarget.value });\r\n  // };\r\n\r\n  // handleTagChange = (event) => {\r\n  //   this.setState({ tag: event.currentTarget.value });\r\n  // };\r\n\r\n  // сбрасывает значение в инпутах\r\n\r\n  handleLicenceChange = (event) => {\r\n    console.log(event.currentTarget.checked);\r\n\r\n    this.setState({ licence: event.currentTarget.checked });\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", tag: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label htmlFor={this.nameInputId}>\r\n          Name{\" \"}\r\n          <input\r\n            id={this.nameInputId}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label htmlFor={this.tagInputId}>\r\n          Tag{\" \"}\r\n          <input\r\n            id={this.tagInputId}\r\n            type=\"text\"\r\n            name=\"tag\"\r\n            value={this.state.tag}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <p>Your level:</p>\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"experience\"\r\n            value=\"junior\"\r\n            onChange={this.handleChange}\r\n            checked={this.state.experience === \"junior\"}\r\n          />\r\n          Junior\r\n        </label>\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"experience\"\r\n            value=\"middle\"\r\n            onChange={this.handleChange}\r\n            checked={this.state.experience === \"middle\"}\r\n          />\r\n          Middle\r\n        </label>\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"experience\"\r\n            value=\"senior\"\r\n            onChange={this.handleChange}\r\n            checked={this.state.experience === \"senior\"}\r\n          />\r\n          Senior\r\n        </label>\r\n\r\n        <label>\r\n          {/* checked={this.state.licence} буквально зависит от значения в стейте */}\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"licence\"\r\n            checked={this.state.licence}\r\n            onChange={this.handleLicenceChange}\r\n          />{\" \"}\r\n          Agree with the condition\r\n        </label>\r\n\r\n        <button type=\"submit\" disabled={!this.state.licence}>\r\n          Send\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n// import Counter from \"./components/counter/Counter\";\r\n// import Dropdown from \"./components/Dropdown/Dropdown\";\r\n// import ColorPicker from \"./components/ColorPicker/ColorPicker\";\r\n// import TodoList from \"./components/TodoList\";\r\nimport Form from \"./components/Form/Form\";\r\n\r\n// const colorPickerOptions = [\r\n//   { label: \"red\", color: \"#F44336\" },\r\n//   { label: \"green\", color: \"#4CAF50\" },\r\n//   { label: \"blue\", color: \"#2196F3\" },\r\n//   { label: \"grey\", color: \"#607D8B\" },\r\n//   { label: \"pink\", color: \"#E91E63\" },\r\n//   { label: \"indigo\", color: \"#3F51B5\" },\r\n// ];\r\n\r\nclass App extends Component {\r\n  // state = {\r\n  //   todos: [\r\n  //     { id: \"id-1\", text: \"Выучить основы React\", completed: true },\r\n  //     { id: \"id-2\", text: \"Разобраться с React Router\", completed: false },\r\n  //     { id: \"id-3\", text: \"Пережить Redux\", completed: false },\r\n  //   ],\r\n  // };\r\n\r\n  // для инпутов\r\n\r\n  state = {};\r\n\r\n  formSubmitNandler = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  // мы хотим изменить состояние от предыдущего\r\n  // хотим взять все todo кроме того id которого мы передаем\r\n  // deleteTodo = (todoId) => {\r\n  //   this.setState((prevState) => ({\r\n  //     todos: prevState.todos.filter((todo) => todo.id !== todoId),\r\n  // мы не мутируем коллекцию\r\n  // prevState.todos - предыдущее значение todos\r\n  // filter((todo) => todo.id !== todoId) - для каждой из них проверяем айишник\r\n  // в новый массив возвращаем тот id, который не равен\r\n  //   }));\r\n  // };\r\n\r\n  render() {\r\n    // const { todos } = this.state;\r\n\r\n    // const completeTodosCount = todos.reduce(\r\n    //   // (acc, todo) => (todo.completed ? acc + 1 : acc),\r\n    //   (total, todo) => (todo.completed ? total + 1 : total),\r\n    //   0\r\n    // );\r\n\r\n    return (\r\n      <>\r\n        <Form onSubmit={this.formSubmitNandler} />\r\n\r\n        {/* <ColorPicker options={colorPickerOptions} /> */}\r\n\r\n        {/* <div>\r\n          <span>Общее кол-во:{todos.length}</span>\r\n          <span>Кол-во выполненых:{completeTodosCount}</span>\r\n        </div> */}\r\n\r\n        {/* <TodoList todos={todos} onDeleteTodo={this.deleteTodo} /> */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// function App() {\r\n//   return (\r\n//     <>\r\n//       {/* <ColorPicker options={colorPickerOptions} /> */}\r\n\r\n//       <TodoList />\r\n//     </>\r\n//   );\r\n// }\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}