{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","inputValue","type","value","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPA8EeA,E,4MAnDbC,MAAQ,CACNC,WAAY,O,4CAed,WASE,OACE,mCACE,uBAAOC,KAAK,OAAOC,MAAOC,KAAKJ,MAAMC,mB,GAtC3BI,aCJHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c8d91eab.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n// import Counter from \"./components/counter/Counter\";\r\n// import Dropdown from \"./components/Dropdown/Dropdown\";\r\n// import ColorPicker from \"./components/ColorPicker/ColorPicker\";\r\n// import TodoList from \"./components/TodoList\";\r\n\r\n// const colorPickerOptions = [\r\n//   { label: \"red\", color: \"#F44336\" },\r\n//   { label: \"green\", color: \"#4CAF50\" },\r\n//   { label: \"blue\", color: \"#2196F3\" },\r\n//   { label: \"grey\", color: \"#607D8B\" },\r\n//   { label: \"pink\", color: \"#E91E63\" },\r\n//   { label: \"indigo\", color: \"#3F51B5\" },\r\n// ];\r\n\r\nclass App extends Component {\r\n  // state = {\r\n  //   todos: [\r\n  //     { id: \"id-1\", text: \"Выучить основы React\", completed: true },\r\n  //     { id: \"id-2\", text: \"Разобраться с React Router\", completed: false },\r\n  //     { id: \"id-3\", text: \"Пережить Redux\", completed: false },\r\n  //   ],\r\n  // };\r\n\r\n  // для инпутов\r\n\r\n  state = {\r\n    inputValue: \"123\",\r\n  };\r\n\r\n  // мы хотим изменить состояние от предыдущего\r\n  // хотим взять все todo кроме того id которого мы передаем\r\n  // deleteTodo = (todoId) => {\r\n  //   this.setState((prevState) => ({\r\n  //     todos: prevState.todos.filter((todo) => todo.id !== todoId),\r\n  // мы не мутируем коллекцию\r\n  // prevState.todos - предыдущее значение todos\r\n  // filter((todo) => todo.id !== todoId) - для каждой из них проверяем айишник\r\n  // в новый массив возвращаем тот id, который не равен\r\n  //   }));\r\n  // };\r\n\r\n  render() {\r\n    // const { todos } = this.state;\r\n\r\n    // const completeTodosCount = todos.reduce(\r\n    //   // (acc, todo) => (todo.completed ? acc + 1 : acc),\r\n    //   (total, todo) => (todo.completed ? total + 1 : total),\r\n    //   0\r\n    // );\r\n\r\n    return (\r\n      <>\r\n        <input type=\"text\" value={this.state.inputValue} />\r\n        {/* <ColorPicker options={colorPickerOptions} /> */}\r\n\r\n        {/* <div>\r\n          <span>Общее кол-во:{todos.length}</span>\r\n          <span>Кол-во выполненых:{completeTodosCount}</span>\r\n        </div> */}\r\n\r\n        {/* <TodoList todos={todos} onDeleteTodo={this.deleteTodo} /> */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// function App() {\r\n//   return (\r\n//     <>\r\n//       {/* <ColorPicker options={colorPickerOptions} /> */}\r\n\r\n//       <TodoList />\r\n//     </>\r\n//   );\r\n// }\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}